{"version":3,"file":"static/js/78.72cc5d82.chunk.js","mappings":"6RACA,EAA+B,mCAA/B,EAAkF,oCAAlF,EAAsI,oC,SCOzHA,EAAe,WAC1B,OAA0BC,EAAAA,EAAAA,MAAnBC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,SAAS,WAAD,wBAAE,WAAOC,EAAP,uFAAiBC,EAAjB,EAAiBA,UACjBL,EAA0BI,EAA1BJ,KAAME,EAAoBE,EAApBF,SAAUD,EAAUG,EAAVH,MACnB,CAACD,EAAME,EAAUD,GAAOK,MAAMC,SAF3B,0EAOIf,EAAgBY,GAPpB,uBAMII,EANJ,EAMJC,KAAQD,MANJ,UAQAb,GAASe,EAAAA,EAAAA,IAASF,IARlB,yBASAb,GAASgB,EAAAA,EAAAA,OATT,yBAUAlB,EAAS,YAAa,CAC1BmB,SAAS,IAXL,QAaNC,EAAAA,GAAAA,QAAA,sBAA6Bb,EAA7B,iBAbM,kDAeNa,EAAAA,GAAAA,MAAA,wBAfM,QAkBRR,EAAU,IAlBF,0DAAF,qDAAC,KAsBX,OACE,+BACE,kBAAMS,UAAWC,EAAgBZ,SAAUN,EAAOmB,aAAlD,WACE,mBAAOF,UAAWC,EAAiBE,QAAQ,OAA3C,UACG,IADH,WAIA,kBACEH,UAAWC,EACXG,GAAG,OACHlB,KAAK,OACLmB,KAAK,OACLC,SAAUvB,EAAOwB,aACjBC,MAAOzB,EAAOO,OAAOJ,KACrBuB,UAAQ,KAEV,kBAAOT,UAAWC,EAAiBE,QAAQ,QAA3C,4BAGA,kBACEH,UAAWC,EACXG,GAAG,QACHlB,KAAK,QACLmB,KAAK,QACLC,SAAUvB,EAAOwB,aACjBC,MAAOzB,EAAOO,OAAOH,MACrBsB,UAAQ,KAGV,kBAAOT,UAAWC,EAAiBE,QAAQ,WAA3C,uBAGA,kBACEH,UAAWC,EACXG,GAAG,WACHlB,KAAK,WACLmB,KAAK,OACLC,SAAUvB,EAAOwB,aACjBC,MAAOzB,EAAOO,OAAOF,SACrBqB,UAAQ,KAGV,mBAAQJ,KAAK,SAAb,gICjFO,SAASK,IACtB,OACE,iCACE,0CACA,SAAClC,EAAD","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Form/RegisterForm/RegisterForm.module.css?2cff","components/Form/RegisterForm/RegisterForm.js","Pages/RegisterPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"registerForm\":\"RegisterForm_registerForm__taSX4\",\"registerInput\":\"RegisterForm_registerInput__EXo-v\",\"registerLabel\":\"RegisterForm_registerLabel__WVU1L\"};","import React from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetRegisterUserMutation } from 'ApiService/UserApi';\nimport { setToken, setLoggedIn } from 'redux/auth-slice';\nimport { toast } from 'react-toastify';\nimport s from './RegisterForm.module.css';\nexport const RegisterForm = () => {\n  const [GetRegisterUser] = useGetRegisterUserMutation();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    onSubmit: async (values, { resetForm }) => {\n      const { name, password, email } = values;\n      if (![name, password, email].every(Boolean)) return;\n\n      try {\n        const {\n          data: { token },\n        } = await GetRegisterUser(values);\n        await dispatch(setToken(token));\n        await dispatch(setLoggedIn());\n        await navigate('/contacts', {\n          replace: true,\n        });\n        toast.success(`New user - \"${name} registered `);\n      } catch (err) {\n        toast.error(`\nRegistration error`);\n      }\n      resetForm({});\n    },\n  });\n\n  return (\n    <>\n      <form className={s.registerForm} onSubmit={formik.handleSubmit}>\n        <label className={s.registerLabel} htmlFor=\"Name\">\n          {' '}\n          Name\n        </label>\n        <input\n          className={s.registerInput}\n          id=\"Name\"\n          name=\"name\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.name}\n          required\n        />\n        <label className={s.registerLabel} htmlFor=\"email\">\n          Email Address\n        </label>\n        <input\n          className={s.registerInput}\n          id=\"email\"\n          name=\"email\"\n          type=\"email\"\n          onChange={formik.handleChange}\n          value={formik.values.email}\n          required\n        />\n\n        <label className={s.registerLabel} htmlFor=\"Password\">\n          Password\n        </label>\n        <input\n          className={s.registerInput}\n          id=\"Password\"\n          name=\"password\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n          required\n        />\n\n        <button type=\"submit\">Зарегистрироваться</button>\n      </form>\n    </>\n  );\n};\n","import { RegisterForm } from 'components/Form/RegisterForm/RegisterForm';\n\nexport default function RegisterPage() {\n  return (\n    <>\n      <h1>RegisterPage</h1>\n      <RegisterForm />\n    </>\n  );\n}\n"],"names":["RegisterForm","useGetRegisterUserMutation","GetRegisterUser","navigate","useNavigate","dispatch","useDispatch","formik","useFormik","initialValues","name","email","password","onSubmit","values","resetForm","every","Boolean","token","data","setToken","setLoggedIn","replace","toast","className","s","handleSubmit","htmlFor","id","type","onChange","handleChange","value","required","RegisterPage"],"sourceRoot":""}