{"version":3,"file":"static/js/315.919c86d5.chunk.js","mappings":"8RAOaA,EAAe,WAC1B,OAA0BC,EAAAA,EAAAA,MAAnBC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,SAAS,WAAD,wBAAE,WAAOC,EAAP,qFAAiBC,EAAjB,EAAiBA,UAAjB,kBAIIb,EAAgBY,GAJpB,uBAGIE,EAHJ,EAGJC,KAAQD,MAHJ,SAKAX,GAASa,EAAAA,EAAAA,IAASF,IALlB,wBAMAX,GAASc,EAAAA,EAAAA,OANT,yBAOAhB,EAAS,YAAa,CAC1BiB,SAAS,IARL,kEAWRL,EAAU,IAXF,0DAAF,qDAAC,KAeX,OACE,+BACE,kBAAMF,SAAUN,EAAOc,aAAvB,WACE,kBAAOC,QAAQ,OAAf,oBACA,kBACEC,GAAG,OACHb,KAAK,OACLc,KAAK,OACLC,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOO,OAAOJ,QAEvB,kBAAOY,QAAQ,QAAf,4BACA,kBACEC,GAAG,QACHb,KAAK,QACLc,KAAK,QACLC,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOO,OAAOH,SAGvB,kBAAOW,QAAQ,WAAf,uBACA,kBACEC,GAAG,WACHb,KAAK,WACLc,KAAK,OACLC,SAAUlB,EAAOmB,aACjBC,MAAOpB,EAAOO,OAAOF,YAGvB,mBAAQY,KAAK,SAAb,0BC5DO,SAASI,IACtB,OACE,iCACE,0CACA,SAAC5B,EAAD","sources":["components/RegisterForm.js","Pages/RegisterPage.js"],"sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useGetRegisterUserMutation } from 'components/ApiService/UserApi';\nimport { setToken, setLoggedIn } from 'redux/auth-slice';\n\nexport const RegisterForm = () => {\n  const [GetRegisterUser] = useGetRegisterUserMutation();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    onSubmit: async (values, { resetForm }) => {\n      try {\n        const {\n          data: { token },\n        } = await GetRegisterUser(values);\n        await dispatch(setToken(token));\n        await dispatch(setLoggedIn());\n        await navigate('/contacts', {\n          replace: true,\n        });\n      } catch (err) {}\n      resetForm({});\n    },\n  });\n\n  return (\n    <>\n      <form onSubmit={formik.handleSubmit}>\n        <label htmlFor=\"Name\"> Name</label>\n        <input\n          id=\"Name\"\n          name=\"name\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.name}\n        />\n        <label htmlFor=\"email\">Email Address</label>\n        <input\n          id=\"email\"\n          name=\"email\"\n          type=\"email\"\n          onChange={formik.handleChange}\n          value={formik.values.email}\n        />\n\n        <label htmlFor=\"Password\">Password</label>\n        <input\n          id=\"Password\"\n          name=\"password\"\n          type=\"text\"\n          onChange={formik.handleChange}\n          value={formik.values.password}\n        />\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm';\n\nexport default function RegisterPage() {\n  return (\n    <>\n      <h1>RegisterPage</h1>\n      <RegisterForm />\n    </>\n  );\n}\n"],"names":["RegisterForm","useGetRegisterUserMutation","GetRegisterUser","navigate","useNavigate","dispatch","useDispatch","formik","useFormik","initialValues","name","email","password","onSubmit","values","resetForm","token","data","setToken","setLoggedIn","replace","handleSubmit","htmlFor","id","type","onChange","handleChange","value","RegisterPage"],"sourceRoot":""}