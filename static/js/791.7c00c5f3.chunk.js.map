{"version":3,"file":"static/js/791.7c00c5f3.chunk.js","mappings":"qRAMe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,WACHN,EAAYO,EAAMC,QAClB,MACF,IAAK,QACHN,EAASK,GACT,MACF,QACE,SASAE,EAAY,mCAAG,WAAML,GAAN,kFACnBA,EAAEM,iBADiB,SAEWf,EAAa,CAAEM,MAAAA,EAAOF,SAAAA,IAFjC,mBAEXY,EAFW,EAEXA,KAAMC,EAFK,EAELA,OACVD,EAHe,iCAIXf,GAASiB,EAAAA,EAAAA,IAAQ,OAACF,QAAD,IAACA,OAAD,EAACA,EAAMG,QAJb,wBAKXlB,GAASmB,EAAAA,EAAAA,OALE,yBAMXvB,EAAS,YAAa,CAC1BwB,SAAS,IAPM,QAUfJ,GACFK,MAAM,qKAfRf,EAAS,IACTF,EAAY,IAGO,4CAAH,sDAgBlB,OACE,iCACE,wCACA,kBAAMkB,SAAUT,EAAhB,WACE,mBAAOU,QAAQ,QAAf,mBAEE,kBAEEC,KAAK,QACLd,KAAK,QACLC,MAAON,EACPoB,SAAUlB,EAGVmB,UAAQ,QAIZ,mBAAOH,QAAQ,WAAf,sBAEE,kBAEEC,KAAK,OACLd,KAAK,WACLC,MAAOR,EACPsB,SAAUlB,EAGVmB,UAAQ,QAGZ,mBAAQF,KAAK,SAAb","sources":["Pages/LoginPage.js"],"sourcesContent":["import { useNavigate } from 'react-router-dom';\nimport { useGetLogInUserMutation } from 'components/ApiService/UserApi';\nimport { setToken, setLoggedIn } from 'redux/auth-slice';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nexport default function LoginPage() {\n  const navigate = useNavigate();\n  const [getLogInUser] = useGetLogInUserMutation();\n  const dispatch = useDispatch();\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'password':\n        setPassword(value.trim());\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const { data, error } = await getLogInUser({ email, password });\n    if (data) {\n      await dispatch(setToken(data?.token));\n      await dispatch(setLoggedIn());\n      await navigate('/contacts', {\n        replace: true,\n      });\n    }\n    if (error) {\n      alert('Не правильный пароль или логин!');\n    }\n    reset();\n  };\n\n  return (\n    <>\n      <h1>LoginPage </h1>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"email\">\n          email\n          <input\n            // className={s.formInput}\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label htmlFor=\"password\">\n          password\n          <input\n            // className={s.formInput}\n            type=\"text\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            //  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            //  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Войти</button>\n      </form>\n    </>\n  );\n}\n"],"names":["LoginPage","navigate","useNavigate","useGetLogInUserMutation","getLogInUser","dispatch","useDispatch","useState","password","setPassword","email","setEmail","handleChange","e","target","name","value","trim","handleSubmit","preventDefault","data","error","setToken","token","setLoggedIn","replace","alert","onSubmit","htmlFor","type","onChange","required"],"sourceRoot":""}